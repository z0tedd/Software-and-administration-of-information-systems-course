function subMenuDesktopFollow(e){var t=e.offset().top,n=(e.closest(".js_followContainer").offset().top,!0);$(window).scroll(function(o){e.height()<$(window).height()-200&&990<$(window).width()&&(t<o.currentTarget.scrollY&&n?(e.addClass("followMe"),e.next(".list-group-item").css("margin-top",e.height()+25+"px")):(e.removeClass("followMe"),e.next(".list-group-item").css("margin-top","")))}),$(".js_pinSubMenu").on("click",function(){n?(n=!1,e.removeClass("followMe"),e.next(".list-group-item").css("margin-top","")):n=!0}),$(window).resize(function(){t=e.prev().offset().top+e.prev().height(),$(window).width()<990?(n=!1,e.next(".list-group-item").css("margin-top","")):e.hasClass("followMe")&&(e.next(".list-group-item").css("margin-top",e.height()+25+"px"),n=!0)})}$(document).ready(function(){var t=$(".js_mobileLeftNavController"),n=$(".js_mobileLeftNavContainer");t.on("click",function(o){$(this).toggleClass("mobileLeftNavController_opened"),n.toggleClass("mobileLeftNavContainer_opened")});var o=$(".list-group-item.active+.js_subMenuWithAnchor");o.find("a").on("click",function(o){o.preventDefault();var e=$(this).attr("href"),o=$(e);$("html, body").stop().animate({scrollTop:o.offset().top-140},700,function(){location.hash=e}),n.removeClass("mobileLeftNavContainer_opened"),t.removeClass("mobileLeftNavController_opened")}),$("body").scrollspy({target:".js_subMenuWithAnchor",offset:140}),0<o.length&&subMenuDesktopFollow(o)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyaXB0LmpzIiwic291cmNlcyI6WyJzY3JpcHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG4gIC8vINC+0YLQutGA0YvRgtC40LUg0LzQvtCx0LjQu9GM0L3QvtCz0L4g0LzQtdC90Y5cbiAgdmFyICRtb2JpbGVMZWZ0TmF2Q29udHJvbGxlciA9ICQoJy5qc19tb2JpbGVMZWZ0TmF2Q29udHJvbGxlcicpO1xuICB2YXIgJG1vYmlsZUxlZnROYXZDb250YWluZXIgPSAkKCcuanNfbW9iaWxlTGVmdE5hdkNvbnRhaW5lcicpO1xuXG4gICRtb2JpbGVMZWZ0TmF2Q29udHJvbGxlci5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ21vYmlsZUxlZnROYXZDb250cm9sbGVyX29wZW5lZCcpO1xuICAgICRtb2JpbGVMZWZ0TmF2Q29udGFpbmVyLnRvZ2dsZUNsYXNzKCdtb2JpbGVMZWZ0TmF2Q29udGFpbmVyX29wZW5lZCcpO1xuICB9KVxuXG4gIC8vINCU0L7Qv9C+0LvQvdC40YLQtdC70YzQvdCw0Y8g0L3QsNCy0LjQs9Cw0YbQuNGPXG4gIHZhciAkc3ViTWVudVdpdGhBbmNob3IgPSAkKCcubGlzdC1ncm91cC1pdGVtLmFjdGl2ZSsuanNfc3ViTWVudVdpdGhBbmNob3InKTtcbiAgdmFyICRsaW5rcyA9ICRzdWJNZW51V2l0aEFuY2hvci5maW5kKCdhJyk7XG4gICRsaW5rcy5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGxpbmtJZCA9ICQodGhpcykuYXR0cignaHJlZicpO1xuICAgIHZhciB0YXJnZXRDb250ZW50ID0gJChsaW5rSWQpO1xuICAgIHZhciBib2R5ID0gJChcImh0bWwsIGJvZHlcIik7XG4gICAgYm9keS5zdG9wKCkuYW5pbWF0ZSh7XG4gICAgICBzY3JvbGxUb3A6IHRhcmdldENvbnRlbnQub2Zmc2V0KCkudG9wIC0gMTQwXG4gICAgfSwgNzAwLCBmdW5jdGlvbigpIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSBsaW5rSWQ7XG4gICAgfSlcbiAgICAkbW9iaWxlTGVmdE5hdkNvbnRhaW5lci5yZW1vdmVDbGFzcygnbW9iaWxlTGVmdE5hdkNvbnRhaW5lcl9vcGVuZWQnKTtcbiAgICAkbW9iaWxlTGVmdE5hdkNvbnRyb2xsZXIucmVtb3ZlQ2xhc3MoJ21vYmlsZUxlZnROYXZDb250cm9sbGVyX29wZW5lZCcpO1xuICB9KVxuICAvLyDQndCw0LHQu9GO0LTQtdC90LjQtSDQt9CwINGB0LrRgNC+0LvQu9C+0LxcbiAgJCgnYm9keScpLnNjcm9sbHNweSh7XG4gICAgdGFyZ2V0OiAnLmpzX3N1Yk1lbnVXaXRoQW5jaG9yJyxcbiAgICBvZmZzZXQ6IDE0MFxuICB9KTtcbiAgLy8g0JfQsNC60YDQtdC/0LvQtdC90LjRjyDQvNC10L3RjiDQtNC70Y8g0LTQtdGB0LrRgtC+0L/QvtCyINC10YHQu9C4INGN0LrRgNCw0L0g0LTQvtGB0YLQsNGC0L7Rh9C90L4g0LHQvtC70YzRiNC+0LlcblxuICBpZiAoJHN1Yk1lbnVXaXRoQW5jaG9yLmxlbmd0aCA+IDApIHtcbiAgICBzdWJNZW51RGVza3RvcEZvbGxvdygkc3ViTWVudVdpdGhBbmNob3IpO1xuICB9XG59KTtcblxuZnVuY3Rpb24gc3ViTWVudURlc2t0b3BGb2xsb3coJHN1Yk1lbnUpIHtcbiAgdmFyIHN0YXJ0Rml4aW5nUG9zID0gJHN1Yk1lbnUub2Zmc2V0KCkudG9wO1xuICB2YXIgJG1lbnVQYXJyZW50ID0gJHN1Yk1lbnUuY2xvc2VzdCgnLmpzX2ZvbGxvd0NvbnRhaW5lcicpO1xuICB2YXIgc3RhcnRNZW51UG9zID0gJG1lbnVQYXJyZW50Lm9mZnNldCgpLnRvcDtcbiAgdmFyIGZpeGVkID0gdHJ1ZTtcbiAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbihldmVudCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCQod2luZG93KS5oZWlnaHQoKSk7XG4gICAgLy8gY29uc29sZS5sb2coJHN1Yk1lbnUuaGVpZ2h0KCkpO1xuICAgIGlmICgkc3ViTWVudS5oZWlnaHQoKSA8ICQod2luZG93KS5oZWlnaHQoKSAtIDIwMCAmJiAkKHdpbmRvdykud2lkdGgoKSA+IDk5MCkge1xuICAgICAgaWYgKHN0YXJ0Rml4aW5nUG9zIDwgZXZlbnQuY3VycmVudFRhcmdldC5zY3JvbGxZICYmIGZpeGVkKSB7XG4gICAgICAgICRzdWJNZW51LmFkZENsYXNzKFwiZm9sbG93TWVcIik7XG4gICAgICAgICRzdWJNZW51Lm5leHQoJy5saXN0LWdyb3VwLWl0ZW0nKS5jc3MoJ21hcmdpbi10b3AnLCAkc3ViTWVudS5oZWlnaHQoKSArIDI1ICsgJ3B4Jyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkc3ViTWVudS5yZW1vdmVDbGFzcyhcImZvbGxvd01lXCIpO1xuICAgICAgICAkc3ViTWVudS5uZXh0KCcubGlzdC1ncm91cC1pdGVtJykuY3NzKCdtYXJnaW4tdG9wJywgJycpO1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgJCgnLmpzX3BpblN1Yk1lbnUnKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICBpZiAoZml4ZWQpIHtcbiAgICAgIGZpeGVkID0gZmFsc2U7XG4gICAgICAkc3ViTWVudS5yZW1vdmVDbGFzcyhcImZvbGxvd01lXCIpO1xuICAgICAgJHN1Yk1lbnUubmV4dCgnLmxpc3QtZ3JvdXAtaXRlbScpLmNzcygnbWFyZ2luLXRvcCcsICcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZml4ZWQgPSB0cnVlO1xuICAgIH1cbiAgfSlcblxuICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCkge1xuICAgIHN0YXJ0Rml4aW5nUG9zID0gJHN1Yk1lbnUucHJldigpLm9mZnNldCgpLnRvcCArICRzdWJNZW51LnByZXYoKS5oZWlnaHQoKTtcbiAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPCA5OTApIHtcbiAgICAgIGZpeGVkID0gZmFsc2U7XG4gICAgICAkc3ViTWVudS5uZXh0KCcubGlzdC1ncm91cC1pdGVtJykuY3NzKCdtYXJnaW4tdG9wJywgJycpO1xuICAgIH0gZWxzZSBpZiAoJHN1Yk1lbnUuaGFzQ2xhc3MoJ2ZvbGxvd01lJykpIHtcbiAgICAgICRzdWJNZW51Lm5leHQoJy5saXN0LWdyb3VwLWl0ZW0nKS5jc3MoJ21hcmdpbi10b3AnLCAkc3ViTWVudS5oZWlnaHQoKSArIDI1ICsgJ3B4Jyk7XG4gICAgICBmaXhlZCA9IHRydWU7XG4gICAgfVxuICB9KVxufVxuXG4vLyAkKHdpbmRvdykubG9hZChmdW5jdGlvbigpe1xuLy9cbi8vICAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhcm91c2VsLXNsaWRlLXRlbXBsYXRlXCIpICYmICQoJy5qc19jYXJvdXNlbElubmVyJykubGVuZ3RoPjApe1xuLy8gICAgICAgICB2YXIgc291cmNlICAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhcm91c2VsLXNsaWRlLXRlbXBsYXRlXCIpLmlubmVySFRNTDtcbi8vICAgICAgICAgdmFyIHRlbXBsYXRlID0gSGFuZGxlYmFycy5jb21waWxlKHNvdXJjZSk7XG4vLyAgICAgICAgIHZhciAkanNfY2Fyb3VzZWxJbm5lciA9ICQoJy5qc19jYXJvdXNlbElubmVyJyk7XG4vLyAgICAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbi8vICAgICAgICAgdmFyIGdsb2JhbENvdXJzZXNDYXJvdXNlbERhdGFBcnJheV9jYXNoID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShnbG9iYWxDb3Vyc2VzQ2Fyb3VzZWxEYXRhQXJyYXkpKTtcbi8vICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBnbG9iYWxDb3Vyc2VzQ2Fyb3VzZWxEYXRhQXJyYXkubGVuZ3RoOyBpKyspIHtcbi8vXG4vLyAgICAgICAgICAgICB2YXIgcmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKihnbG9iYWxDb3Vyc2VzQ2Fyb3VzZWxEYXRhQXJyYXlfY2FzaC5sZW5ndGgpKTtcbi8vICAgICAgICAgICAgIGlmKGk9PTApe1xuLy8gICAgICAgICAgICAgICAgIGdsb2JhbENvdXJzZXNDYXJvdXNlbERhdGFBcnJheV9jYXNoW3JhbmRvbV0uYWN0aXZlID0gXCJhY3RpdmVcIlxuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhnbG9iYWxDb3Vyc2VzQ2Fyb3VzZWxEYXRhQXJyYXlfY2FzaFtyYW5kb21dKVxuLy8gICAgICAgICAgICAgdmFyIGh0bWwgPSB0ZW1wbGF0ZShnbG9iYWxDb3Vyc2VzQ2Fyb3VzZWxEYXRhQXJyYXlfY2FzaFtyYW5kb21dKTtcbi8vICAgICAgICAgICAgIGdsb2JhbENvdXJzZXNDYXJvdXNlbERhdGFBcnJheV9jYXNoLnNwbGljZShyYW5kb20sIDEpO1xuLy8gICAgICAgICAgICAgJChkaXYpLmFwcGVuZChodG1sKTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgICB2YXIgaHRtbGVuZCA9IHRlbXBsYXRlKGdsb2JhbENvdXJzZXNDYXJvdXNlbERhdGFMYXN0KTtcbi8vICAgICAgICAgJChkaXYpLmFwcGVuZChodG1sZW5kKTtcbi8vICAgICAgICAgJGpzX2Nhcm91c2VsSW5uZXIuaHRtbCgkKGRpdikuaHRtbCgpKTtcbi8vICAgICB9XG4vL1xuLy8gICAvLyDQu9C40YHRgtCw0LvQutCwINC60LDRgNGD0YHQtdC70LXQuSDQvdCwINGI0LjRgNC+0LrQvtC8INGN0LrRgNCw0L3QtVxuLy8gICB2YXIgc2xpZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWwtc2xpZGUnKTtcbi8vICAgdmFyIHBvc2l0aW9uID0gMDtcbi8vICAgdmFyIGNvdW50ID0gMDtcbi8vXG4vLyAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8IDUwMCkge1xuLy8gICAgICQoJ2JvZHknKS5vbignY2xpY2snLCAnLmZhLWFuZ2xlLXJpZ2h0Jywgc3dpZnRSaWdodCk7XG4vLyAgICAgJCgnYm9keScpLm9uKCdjbGljaycsICcuZmEtYW5nbGUtbGVmdCcsIHN3aWZ0TGVmdCk7XG4vLyAgIH0gZWxzZSB7XG4vLyAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbElubmVyJykgJiYgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsSW5uZXInKS5jbGllbnRXaWR0aCA8IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbE91dGVyJykuY2xpZW50V2lkdGgpIHtcbi8vICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb250cm9scycpWzBdLmNsYXNzTGlzdC5hZGQoJ3RyYW5zcGFyZW50Jyk7XG4vLyAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY29udHJvbHMnKVsxXS5jbGFzc0xpc3QuYWRkKCd0cmFuc3BhcmVudCcpO1xuLy8gICAgIH07XG4vLyAgICAgaWYgKHNsaWRlICYmIHNsaWRlLmNsaWVudFdpZHRoKmNvdW50ID09IDApIHtcbi8vICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb250cm9scycpWzBdLmNsYXNzTGlzdC5hZGQoJ3RyYW5zcGFyZW50Jyk7XG4vLyAgICAgfTtcbi8vICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgJy5mYS1hbmdsZS1yaWdodCcsIG1vdmVSaWdodCk7XG4vLyAgICAgJCgnYm9keScpLm9uKCdjbGljaycsICcuZmEtYW5nbGUtbGVmdCcsIG1vdmVMZWZ0KTtcbi8vICAgfVxuLy9cbi8vICAgZnVuY3Rpb24gbW92ZVJpZ2h0KCkge1xuLy8gICAgIGlmIChzbGlkZS5jbGllbnRXaWR0aCpjb3VudCA8ICggZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsSW5uZXInKS5jbGllbnRXaWR0aCAtIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbE91dGVyJykuY2xpZW50V2lkdGgpICkge1xuLy8gICAgICAgKytjb3VudDtcbi8vICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb250cm9scycpWzFdLmNsYXNzTGlzdC5yZW1vdmUoJ3RyYW5zcGFyZW50Jyk7XG4vLyAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY29udHJvbHMnKVswXS5jbGFzc0xpc3QucmVtb3ZlKCd0cmFuc3BhcmVudCcpO1xuLy8gICAgIH1cbi8vICAgICBpZiAoc2xpZGUuY2xpZW50V2lkdGgqY291bnQgPiAoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbElubmVyJykuY2xpZW50V2lkdGggLSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWxPdXRlcicpLmNsaWVudFdpZHRoKSApIHtcbi8vICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb250cm9scycpWzFdLmNsYXNzTGlzdC5hZGQoJ3RyYW5zcGFyZW50Jyk7XG4vLyAgICAgfVxuLy8gICAgIHBvc2l0aW9uID0gTWF0aC5taW4oKHNsaWRlLmNsaWVudFdpZHRoKzEwKSpjb3VudCwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsSW5uZXInKS5jbGllbnRXaWR0aCAtIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbE91dGVyJykuY2xpZW50V2lkdGgpO1xuLy8gICAgIGlmICggZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsT3V0ZXInKS5jbGllbnRXaWR0aCA+PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWxJbm5lcicpLmNsaWVudFdpZHRoICkge1xuLy8gICAgICAgcG9zaXRpb24gPSBNYXRoLm1pbihzbGlkZS5jbGllbnRXaWR0aCpjb3VudCwgMCk7XG4vLyAgICAgfVxuLy8gICAgICQoJy5jYXJvdXNlbElubmVyJykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlWCgtJyArIHBvc2l0aW9uICsgJ3B4KScpO1xuLy8gICAgICQoJy5jYXJvdXNlbElubmVyJykuY3NzKCd0cmFuc2l0aW9uJywgJ3RyYW5zZm9ybSAwLjNzIGVhc2Utb3V0Jyk7XG4vLyAgIH07XG4vLyAgIGZ1bmN0aW9uIG1vdmVMZWZ0KCkge1xuLy8gICAgIGlmIChzbGlkZS5jbGllbnRXaWR0aCpjb3VudCA+IDApIHtcbi8vICAgICAgIC0tY291bnQ7XG4vLyAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY29udHJvbHMnKVsxXS5jbGFzc0xpc3QucmVtb3ZlKCd0cmFuc3BhcmVudCcpO1xuLy8gICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbnRyb2xzJylbMF0uY2xhc3NMaXN0LnJlbW92ZSgndHJhbnNwYXJlbnQnKTtcbi8vICAgICB9XG4vLyAgICAgaWYgKHNsaWRlLmNsaWVudFdpZHRoKmNvdW50ID09IDApICB7XG4vLyAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udHJvbHM6Zmlyc3Qtb2YtdHlwZScpLmNsYXNzTGlzdC5hZGQoJ3RyYW5zcGFyZW50Jyk7XG4vLyAgICAgfVxuLy8gICAgIHBvc2l0aW9uID0gTWF0aC5taW4oKHNsaWRlLmNsaWVudFdpZHRoKzEwKSpjb3VudCwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsSW5uZXInKS5jbGllbnRXaWR0aCAtIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbE91dGVyJykuY2xpZW50V2lkdGgpO1xuLy9cbi8vICAgICBpZiAoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbE91dGVyJykuY2xpZW50V2lkdGggPj0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsSW5uZXInKS5jbGllbnRXaWR0aCApIHtcbi8vICAgICAgIHBvc2l0aW9uID0gTWF0aC5taW4oc2xpZGUuY2xpZW50V2lkdGgqY291bnQsIDApO1xuLy8gICAgIH1cbi8vICAgICAkKCcuY2Fyb3VzZWxJbm5lcicpLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZVgoLScgKyBwb3NpdGlvbiArICdweCknKTtcbi8vICAgICAkKCcuY2Fyb3VzZWxJbm5lcicpLmNzcygndHJhbnNpdGlvbicsICd0cmFuc2Zvcm0gMC4zcyBlYXNlLW91dCcpO1xuLy8gICB9O1xuLy8gICBmdW5jdGlvbiBzd2lmdFJpZ2h0KCkge1xuLy8gICAgIGlmICghZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsLXNsaWRlLmFjdGl2ZScpKSB7XG4vLyAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWwtc2xpZGUnKS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbi8vICAgICB9XG4vLyAgICAgdmFyIGFjdGl2ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbC1zbGlkZS5hY3RpdmUnKTtcbi8vICAgICBpZiAoYWN0aXZlLm5leHRFbGVtZW50U2libGluZykge1xuLy8gICAgICAgYWN0aXZlLm5leHRFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbi8vICAgICB9IGVsc2Uge1xuLy8gICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsLXNsaWRlJykuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4vLyAgICAgfVxuLy8gICAgIGFjdGl2ZS5zdHlsZS5hbmltYXRpb24gPSBcInN3aWZ0UmlnaHQgMC41c1wiO1xuLy8gICAgIGFjdGl2ZS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbi8vICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWwtc2xpZGUuYWN0aXZlJykuc3R5bGUuYW5pbWF0aW9uID0gXCJzd2lmdFJpZ2h0IDAuNXNcIjtcbi8vICAgfVxuLy9cbi8vICAgZnVuY3Rpb24gc3dpZnRMZWZ0KCkge1xuLy8gICAgIGlmICghZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsLXNsaWRlLmFjdGl2ZScpKSB7XG4vLyAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWwtc2xpZGUnKS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbi8vICAgICB9XG4vLyAgICAgdmFyIGFjdGl2ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbC1zbGlkZS5hY3RpdmUnKTtcbi8vICAgICBpZiAoYWN0aXZlLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpIHtcbi8vICAgICAgIGFjdGl2ZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuLy8gICAgIH0gZWxzZSB7XG4vLyAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2Fyb3VzZWwtc2xpZGUnKVtkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2Fyb3VzZWwtc2xpZGUnKS5sZW5ndGgtMV0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4vLyAgICAgfVxuLy8gICAgIGFjdGl2ZS5zdHlsZS5hbmltYXRpb24gPSBcInN3aWZ0TGVmdCAwLjVzXCI7XG4vLyAgICAgYWN0aXZlLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuLy8gICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbC1zbGlkZS5hY3RpdmUnKS5zdHlsZS5hbmltYXRpb24gPSBcInN3aWZ0TGVmdCAwLjVzXCI7XG4vLyAgIH1cbi8vXG4vLyAgIC8vIHN3aXBlLdC70LjRgdGC0LDQu9C60LAg0LrQsNGA0YPRgdC10LvQtdC5INC90LAg0LzQvtCx0LjQu9GM0L3QvtC8INGN0LrRgNCw0L3QtVxuLy8gICB2YXIgdG91Y2hzdGFydFggPSAwO1xuLy8gICB2YXIgdG91Y2hlbmRYID0gMDtcbi8vXG4vLyAgIHZhciBjYXJvdXNlbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2Fyb3VzZWxPdXRlclwiKSB8fCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI215Q2Fyb3VzZWxcIik7XG4vL1xuLy8gICBjYXJvdXNlbC5vbnRvdWNoc3RhcnQgPSBmdW5jdGlvbihldmVudCkge1xuLy8gICAgIHRvdWNoc3RhcnRYID0gZXZlbnQudG91Y2hlc1swXS5jbGllbnRYO1xuLy8gICB9O1xuLy9cbi8vICAgY2Fyb3VzZWwub250b3VjaGVuZCA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4vLyAgICAgdG91Y2hlbmRYID0gZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WDtcbi8vICAgICBpZiAodG91Y2hlbmRYIDwgdG91Y2hzdGFydFgpIHtcbi8vICAgICAgIGlmICgkKCcuZmEtYW5nbGUtcmlnaHQnKSkge1xuLy8gICAgICAgICAkKCcuZmEtYW5nbGUtcmlnaHQnKS50cmlnZ2VyKCdjbGljaycpO1xuLy8gICAgICAgfVxuLy8gICAgICAgaWYgKCQoJy5jYXJvdXNlbC1jb250cm9sLnJpZ2h0JykpIHtcbi8vICAgICAgICAgJCgnLmNhcm91c2VsLWNvbnRyb2wucmlnaHQnKS50cmlnZ2VyKCdjbGljaycpO1xuLy8gICAgICAgfVxuLy8gICAgIH1cbi8vICAgICBpZiAodG91Y2hlbmRYID4gdG91Y2hzdGFydFgpICB7XG4vLyAgICAgICBpZiAoJCgnLmZhLWFuZ2xlLWxlZnQnKSkge1xuLy8gICAgICAgICAkKCcuZmEtYW5nbGUtbGVmdCcpLnRyaWdnZXIoJ2NsaWNrJyk7XG4vLyAgICAgICB9XG4vLyAgICAgICBpZiAoJCgnLmNhcm91c2VsLWNvbnRyb2wubGVmdCcpKSB7XG4vLyAgICAgICAgICQoJy5jYXJvdXNlbC1jb250cm9sLmxlZnQnKS50cmlnZ2VyKCdjbGljaycpO1xuLy8gICAgICAgfVxuLy8gICAgIH1cbi8vICAgfVxuLy9cbi8vICAgJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbigpe1xuLy8gICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8IDUwMCkge1xuLy8gICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbnRyb2xzJykuZm9yRWFjaChmdW5jdGlvbihjdHJsKSB7XG4vLyAgICAgICAgICAgY3RybC5jbGFzc0xpc3QucmVtb3ZlKCd0cmFuc3BhcmVudCcpO1xuLy8gICAgICAgfSk7XG4vLyAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgJy5mYS1hbmdsZS1yaWdodCcsIHN3aWZ0UmlnaHQpO1xuLy8gICAgICAgJCgnYm9keScpLm9uKCdjbGljaycsICcuZmEtYW5nbGUtbGVmdCcsIHN3aWZ0TGVmdCk7XG4vLyAgICAgfVxuLy8gICB9KVxuLy8gfSlcbiJdLCJuYW1lcyI6WyJzdWJNZW51RGVza3RvcEZvbGxvdyIsIiRzdWJNZW51Iiwic3RhcnRGaXhpbmdQb3MiLCJvZmZzZXQiLCJ0b3AiLCJmaXhlZCIsImNsb3Nlc3QiLCIkIiwid2luZG93Iiwic2Nyb2xsIiwiZXZlbnQiLCJoZWlnaHQiLCJ3aWR0aCIsImN1cnJlbnRUYXJnZXQiLCJzY3JvbGxZIiwiYWRkQ2xhc3MiLCJuZXh0IiwiY3NzIiwicmVtb3ZlQ2xhc3MiLCJvbiIsInJlc2l6ZSIsInByZXYiLCJoYXNDbGFzcyIsImRvY3VtZW50IiwicmVhZHkiLCIkbW9iaWxlTGVmdE5hdkNvbnRyb2xsZXIiLCIkbW9iaWxlTGVmdE5hdkNvbnRhaW5lciIsInRoaXMiLCJ0b2dnbGVDbGFzcyIsIiRzdWJNZW51V2l0aEFuY2hvciIsImZpbmQiLCJwcmV2ZW50RGVmYXVsdCIsImxpbmtJZCIsImF0dHIiLCJ0YXJnZXRDb250ZW50Iiwic3RvcCIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJsb2NhdGlvbiIsImhhc2giLCJzY3JvbGxzcHkiLCJ0YXJnZXQiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiJBQXNDQSxTQUFTQSxxQkFBcUJDLEdBQzVCLElBQUlDLEVBQWlCRCxFQUFTRSxTQUFTQyxJQUduQ0MsR0FGZUosRUFBU0ssUUFBUSx1QkFDSkgsU0FBU0MsS0FDN0IsR0FDWkcsRUFBRUMsUUFBUUMsT0FBTyxTQUFTQyxHQUdwQlQsRUFBU1UsU0FBV0osRUFBRUMsUUFBUUcsU0FBVyxLQUEyQixJQUFwQkosRUFBRUMsUUFBUUksVUFDeERWLEVBQWlCUSxFQUFNRyxjQUFjQyxTQUFXVCxHQUNsREosRUFBU2MsU0FBUyxZQUNsQmQsRUFBU2UsS0FBSyxvQkFBb0JDLElBQUksYUFBY2hCLEVBQVNVLFNBQVcsR0FBSyxRQUU3RVYsRUFBU2lCLFlBQVksWUFDckJqQixFQUFTZSxLQUFLLG9CQUFvQkMsSUFBSSxhQUFjLFFBSTFEVixFQUFFLGtCQUFrQlksR0FBRyxRQUFTLFdBQzFCZCxHQUNGQSxHQUFRLEVBQ1JKLEVBQVNpQixZQUFZLFlBQ3JCakIsRUFBU2UsS0FBSyxvQkFBb0JDLElBQUksYUFBYyxLQUVwRFosR0FBUSxJQUlaRSxFQUFFQyxRQUFRWSxPQUFPLFdBQ2ZsQixFQUFpQkQsRUFBU29CLE9BQU9sQixTQUFTQyxJQUFNSCxFQUFTb0IsT0FBT1YsU0FDNURKLEVBQUVDLFFBQVFJLFFBQVUsS0FDdEJQLEdBQVEsRUFDUkosRUFBU2UsS0FBSyxvQkFBb0JDLElBQUksYUFBYyxLQUMzQ2hCLEVBQVNxQixTQUFTLGNBQzNCckIsRUFBU2UsS0FBSyxvQkFBb0JDLElBQUksYUFBY2hCLEVBQVNVLFNBQVcsR0FBSyxNQUM3RU4sR0FBUSxLQXpFZEUsRUFBRWdCLFVBQVVDLE1BQU0sV0FFaEIsSUFBSUMsRUFBMkJsQixFQUFFLCtCQUM3Qm1CLEVBQTBCbkIsRUFBRSw4QkFFaENrQixFQUF5Qk4sR0FBRyxRQUFTLFNBQVNULEdBQzVDSCxFQUFFb0IsTUFBTUMsWUFBWSxrQ0FDcEJGLEVBQXdCRSxZQUFZLG1DQUl0QyxJQUFJQyxFQUFxQnRCLEVBQUUsaURBQ2RzQixFQUFtQkMsS0FBSyxLQUM5QlgsR0FBRyxRQUFTLFNBQVNULEdBQzFCQSxFQUFNcUIsaUJBQ04sSUFBSUMsRUFBU3pCLEVBQUVvQixNQUFNTSxLQUFLLFFBQ3RCQyxFQUFnQjNCLEVBQUV5QixHQUNYekIsRUFBRSxjQUNSNEIsT0FBT0MsUUFBUSxDQUNsQkMsVUFBV0gsRUFBYy9CLFNBQVNDLElBQU0sS0FDdkMsSUFBSyxXQUNOa0MsU0FBU0MsS0FBT1AsSUFFbEJOLEVBQXdCUixZQUFZLGlDQUNwQ08sRUFBeUJQLFlBQVksb0NBR3ZDWCxFQUFFLFFBQVFpQyxVQUFVLENBQ2xCQyxPQUFRLHdCQUNSdEMsT0FBUSxNQUlzQixFQUE1QjBCLEVBQW1CYSxRQUNyQjFDLHFCQUFxQjZCIn0=
