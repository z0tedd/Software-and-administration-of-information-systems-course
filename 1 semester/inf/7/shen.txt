import math

letter = ["1","7","2","9","3","13","4","8","6","11","5","10","12"]

freq = list(map(float,input().split()))# ввести по-порядку как в таблице

freq_and_letter=dict(zip(letter,freq))

sorted_freq_and_letter={}

freq_and_value=sorted(freq_and_letter.values(),reverse=True)

for i in freq_and_value:
    for k in freq_and_letter.keys():
        if freq_and_letter[k]==i and i!=0:
            sorted_freq_and_letter[k]=freq_and_letter[k]

P=[list(sorted_freq_and_letter.values())]

def part(alist, indices):
    return [alist[i:j] for i, j in zip([0]+indices, indices+[None])]

K=[""]*len(P[0])

l=0
m=0
H=1
while True:
    S=0
    Ps=P[l]
    if len(Ps)!=1:
        S+=Ps[0]
        if S>=0.5*sum(Ps):
            i=0
            n = part(Ps, [i + 1])
            P.pop(l)
            P.insert(l, n[1])
            P.insert(l, n[0])
            for j in range(m, i + 1 + m):
                K[j] += "1"
            for j in range(i + 1 + m, len(Ps) + m):
                K[j] += "0"
            H += 1
            ok = True
            for j in P:
                if len(j) > 1:
                    ok = False
            if ok:
                break
        else:
            S=0
            for i in range(len(Ps)):
                S+=Ps[i]
                if ((S<0.5*sum(Ps)) and (S+Ps[i+1]>0.5*sum(Ps))):
                    n=part(Ps,[i+1])
                    P.pop(l)
                    P.insert(l,n[1])
                    P.insert(l, n[0])
                    for j in range(m,i+1+m):
                        K[j]+="1"
                    for j in range(i+1+m,len(Ps)+m):
                        K[j]+="0"
                    H+=1
                    break
            ok=True
            for j in P:
                if len(j)>1:
                    ok=False
            if ok:
                break
    else:
        l+=1
        m+=1
        ok = True
        for j in P:
            if len(j) > 1:
                ok = False
        if ok:
            break

letter_and_code=dict(zip(list(sorted_freq_and_letter.keys()),K))
print("Таблица кодов:")
print(letter_and_code,"\n")

Shennon=-sum([(i*math.log(i,2)) for i in list(sorted_freq_and_letter.values())])
print("Энтропия:\n",Shennon,"бит/символ")

length=[len(i) for i in list(letter_and_code.values())]
Average_length=sum([length[i]*(list(sorted_freq_and_letter.values()))[i] for i in range(len(length))])
print("\nСредняя длина:\n",Average_length,"бит")

H=1-Shennon/Average_length
print("\nИзбытоность кода:\n",H*100,"%")
# Python_3
